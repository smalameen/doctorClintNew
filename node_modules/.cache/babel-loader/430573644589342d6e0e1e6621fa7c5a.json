{"ast":null,"code":"var _jsxFileName = \"E:\\\\Web development\\\\doctorClintNew\\\\src\\\\Component\\\\PrivateRoute\\\\PrivateRoute.js\";\nimport React, { useContext } from 'react';\nimport { Redirect, Route } from 'react-router';\nimport { UserContext } from '../../App';\n\nconst PrivateRoute = ({\n  children,\n  ...rest\n}) => {\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: ({\n      location\n    }) => loggedInUser.email ? children : /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: \"/auth\",\n        state: {\n          from: location\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["E:/Web development/doctorClintNew/src/Component/PrivateRoute/PrivateRoute.js"],"names":["React","useContext","Redirect","Route","UserContext","PrivateRoute","children","rest","loggedInUser","setLoggedInUser","location","email","pathname","state","from"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,cAAhC;AACA,SAASC,WAAT,QAA4B,WAA5B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,KAA2B;AAC5C,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,UAAU,CAACG,WAAD,CAAlD;AACA,sBACI,oBAAC,KAAD,oBACEG,IADF;AAEF,IAAA,MAAM,EAAE,CAAC;AAAEG,MAAAA;AAAF,KAAD,KACRF,YAAY,CAACG,KAAb,GACIL,QADJ,gBAGI,oBAAC,QAAD;AACE,MAAA,EAAE,EAAE;AACFM,QAAAA,QAAQ,EAAE,OADR;AAEFC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEJ;AAAR;AAFL,OADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAiBH,CAnBD;;AAqBA,eAAeL,YAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { Redirect, Route } from 'react-router';\nimport { UserContext } from '../../App';\n\nconst PrivateRoute = ({ children, ...rest }) => {\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n    return (\n        <Route\n      {...rest}\n      render={({ location }) =>\n      loggedInUser.email  ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/auth\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n    );\n};\n\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}